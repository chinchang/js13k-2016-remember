$cubeWidth: 100px;
$cubeHeight: 100px;
$cubeDepth: $cubeHeight;

body {
  color: white;
  font-size: 40px;
  background: cornflowerblue;
  margin: 0;
  overflow: hidden;
  padding: 0px;
  text-align: center;
  font-family: Arial;
  text-transform: uppercase;
  font-family: monospace, Helvetica;
  text-shadow: 0 1px 0 #ccc,
               0 2px 0 #c9c9c9,
               0 3px 0 #bbb,
               0 4px 0 #b9b9b9,
               0 5px 0 #aaa,
               0 6px 1px rgba(0,0,0,.1),
               0 0 5px rgba(0,0,0,.1),
               0 1px 3px rgba(0,0,0,.3),
               0 3px 5px rgba(0,0,0,.2),
               0 5px 10px rgba(0,0,0,.25),
               0 10px 10px rgba(0,0,0,.2),
               0 20px 20px rgba(0,0,0,.15);
}
canvas {
  position: absolute;
  left: 0;
  top: 0;
  z-index: 2;
  pointer-events: none;
}
.space3d {
	perspective: 1000px;
	// height: 100vh;
  position: relative;
	top: calc(100vh - 230px);
	left: calc(50vw - 230px);
	perspective-origin: 230px -150px;
}

._3dbox {
	//display: inline-block;
	transition: all 0.85s cubic-bezier(0.175,0.885,0.320,1.275);
  	text-align: center;
	position: absolute;
	cursor: pointer;
	transform-style: preserve-3d;
}

.f {
	overflow: hidden;
	position: absolute;
	//border: 1px solid rgba(0,0,0,0.5);
	background: darkorchid;
	box-shadow: inset 0 0 60px rgba(0, 0, 0, 0.1), 0 0 30px rgba(0, 0, 0, 0.3);
  color: #333;
  opacity: 0.8;
}

@mixin cube($size) {
  .cube-#{$size} {
  width: $size;
  height: $size;
  > .f {
    width: $size;
    height: $size;
  }
  > .f--front {
    transform: translate3d(0, 0, $size / 2);
    background: hsla(280,61%,31%,1);
  }

  > .f--top {
    transform: rotateX(90deg) translate3d(0, 0, $size / 2);
  }

  > .f--bottom {
  	transform: rotateX(-90deg) translate3d(0, 0, $size / 2);
  }

  > .f--left {
    left: 50%;
    margin-left: -$size / 2;
    background: hsla(280,61%,41%,1);
    transform: rotateY(-90deg) translate3d(0, 0, $size / 2);
  }

  > .f--right {
    left: 50%;
    margin-left: -$size / 2;
      background: hsla(280,61%,41%,1);
      transform: rotateY(90deg) translate3d(0, 0, $size / 2);
  }

  > .f--back {
      transform: rotateY(180deg) translate3d(0, 0, $size / 2);
  }
  }
}
@include cube(100px);
@include cube(30px);

// COLORS
.cube--c1 {
  .f { background: hsl(45, 100%, 51%); } //yellow
  > .f--left, > .f--right { background: hsl(45, 100%, 41%); }
  > .f--front { background: hsl(45, 100%, 31%); }
}
.cube--c2 {
  .f { background: hsl(88, 50%, 53%); } //green
  > .f--left, > .f--right { background: hsl(88, 50%, 43%); }
  > .f--front { background: hsl(88, 50%, 33%); }
}
.cube--c3 {
  .f { background: hsl(340, 82%, 52%); } // red
  > .f--left, > .f--right { background: hsl(340, 82%, 42%); }
  > .f--front { background: hsl(340, 82%, 32%); }
}
.cube--c4 {
  .f { background: hsl(199, 100%, 64%); } // red
  > .f--left, > .f--right { background: hsl(199, 100%, 54%); }
  > .f--front { background: hsl(199, 100%, 44%); }
}
.cube--c5 {
  .f { background: hsl(174, 100%, 29%); } // darkgreen
  > .f--left, > .f--right { background: hsl(174, 100%, 20%); }
  > .f--front { background: hsl(174, 100%, 10%) }
}
.cube--c6 {
  .f { background: hsl(300, 100%, 50%); } // darkgreen
  > .f--left, > .f--right { background: hsl(300, 100%, 40%); }
  > .f--front { background: hsl(300, 100%, 30%) }
}

.cube-100px {
  top: 0px;
	//animation: go-down 1s cubic-bezier(0.25, 0.1, 0.15, 1.0) forwards;
	&:hover {
		top: -10px;
	}
  &.destroy {
    opacity: 0;
  }
}
.cube-30px {
  pointer-events: none;
  left: 38%;
  top: 300px;
  transition: 0.3s ease 0.1s;
  transform: translateZ(10px) rotateX(10deg) rotateY(120deg) rotateZ(-50deg);
}
.cube-100px.open .cube-30px {
  top: -60px;
  transform: translateZ(0px) rotateX(345deg) rotateY(345deg) rotateZ(345deg);
  opacity: 1;
}

@keyframes rotate {
	0% { transform: rotateX(0deg) rotateY(20deg); }
	30% { transform: rotateX(10deg) rotateY(120deg) rotateZ(-50deg); }
	70% { transform: rotateX(-170deg) rotateY(-20deg) rotateZ(150deg); }
}
@keyframes go-down {
	to { transform: translateY(0); }
}
.scanlines {
  background: linear-gradient(to bottom, rgba(255, 255, 255, 0), rgba(255, 255, 255, 0) 50%, rgba(0, 0, 0, 0.2) 70%, rgba(0, 0, 0, 0.4));
  background-size: 6px 6px;
  pointer-events: none;
  position: fixed;
  z-index: 3;
  left: 0; right: 0;
  top: 0; bottom: 0;
}
.ui {
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  text-align: center ;
  // align-items: center;
  // flex-direction: column;
  // height: 100vh;
  // justify-content: center;
  transition: all 0.6s cubic-bezier(0.175,0.885,0.320,1.275);
  transform: translateY(-150vh);
  &.show {
    transform: translateY(0px);
  }
  small {
    transition: 0.25s ease;
  }
}
.timer {
  transform: translateY(-100vh);
  transition: 0.3s ease;
}
h1 {
  color: white;
  font-size: 17vw;
  margin-bottom: 20px;
  transition: 0.3s ease 0.1s;
}
button {
  outline: 0;
  border: 2px solid rgba(0,0,0,0.3);
  background: rgba(0,0,0,0.2);
  color: white;
  padding: 30px;
  font-size: 2em;
  border-radius: 10px;
  cursor:pointer;
  transition: 0.25s ease;
  &:hover {
    background: rgba(0,0,0,0.4);
  }
}
.ui.small {
  pointer-events: none;
  h1 {
    font-size: 2em;
  }
  small {
    opacity: 0;
  }
  .timer { transform: translateY(0); }
  button { transform: translateY(-100vh); }
}
.ui.finish {
  h1 {font-size: 4em;}
  .timer {
    font-size: 2em;
    color: greenyellow;
  }
}

// Credits: http://codepen.io/lbebber/pen/KwGEQv
@keyframes squiggly-anim {
  0% {
    filter: url('#squiggly-0'); }

  25% {
    filter: url('#squiggly-1'); }

  50% {
    filter: url('#squiggly-2'); }

  75% {
    filter: url('#squiggly-3'); }
  100% {
    filter: url('#squiggly-4'); }
}